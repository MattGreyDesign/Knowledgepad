%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G1212) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1039 697
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1039 697
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: TSCJPL+AvenirNext-Regular
%!FontType1-1.0: TSCJPL+AvenirNext-Regular 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /TSCJPL+AvenirNext-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /two put
dup 34 /four put
dup 35 /zero put
dup 36 /space put
dup 37 /R put
dup 38 /i put
dup 39 /c put
dup 40 /h put
dup 41 /m put
dup 42 /o put
dup 43 /n put
dup 44 /d put
dup 45 /S put
dup 46 /t put
dup 47 /W put
dup 48 /T put
dup 49 /r put
dup 50 /O put
dup 51 /N put
dup 52 /M put
dup 53 /five put
dup 54 /V put
dup 55 /I put
dup 56 /six put
dup 57 /C put
dup 58 /a put
dup 59 /w put
dup 60 /period put
dup 61 /l put
dup 62 /s put
dup 63 /u put
dup 64 /j put
dup 65 /e put
dup 66 /at put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -394 1 index div -411 2 index div 1309 3 index div 1192 5 -1 roll div]cvx def
/sfnts [<

0D5DB900050004F4B8002810B8000FD0B8000F2FB900190004F4411B0006001900160019002600190036001900460019005600190066001900760019008600190096001900A6001900B6001900C60019000D5D410500D5001900E5001900025DB8000510B80029DC00B800004558B800002F1BB90000000B3E59B800004558B8000A2F1BB9000A00053E59B8000010B900140002F4410500D9001400E9001400025D411B0008001400180014002800140038001400480014005800140068001400780014008800140098001400A8001400B8001400C80014000D5DB8000A10B9001E0002F4411B0007001E0017001E0027001E0037001E0047001E0057001E0067001E0077001E0087001E0097001E00A7001E00B7001E00C7001E000D5D410500D6001E00E6001E00025D303101321E0215140E0223222E0235343E0217220E0215141E0233323E0235342E020122425936171736594243593616163659432F3E240E0E243E2F2E3E240F0F243E02D6416986454585694040698545458669413D3A5A6F35356E593939596E35356F5A3A00000000010033000001F802D6002200E3BB001B0004000800042BB8001B10B80000D0B800002F410500DA000800EA000800025D411B0009000800190008002900080039000800490008005900080069000800790008008900080099000800A9000800B9000800C90008000D5DB8001B10B80024DC00B800004558B800162F1BB90016000B3E59B800004558B800002F1BB9000000053E59B8001610B9000D0002F4410500D9000D00E9000D00025D411B0008000D0018000D0028000D0038000D0048000D0058000D0068000D0078000D0088000D0098000D00A8000D00B8000D00C8000D000D5DB8000010B900210002F43031290135013E0335342E0223220607273E0333321E0215140E020F012101F8FE3B0122101F180E1627331C394E0B47072739482A2B4D3A23131F2A17FF01774B01251025282D181F32231347370E25402E1A19314930223A342F17FD0002002A0000021C02C4000A000E006BBB00040004000500042BB8000410B80000D0B8000510B8000BD0B8000410B80010DC00B800004558B800092F1BB90009000B3E59B800004558B800042F1BB9000400053E59BB00010002000200042BB8000210B80006D0BA000C00040009111239B8000110B8000DD0303125331523152335213501330723033301B4686846FEBC012C5E4602F7F9EA3FABAB4601D351FE77000000010038FFEE01F702C400250101B800262FB8001B2FB8002610B80023D0B800232FB900020004F4410500DA001B00EA001B00025D411B0009001B0019001B0029001B0039001B0049001B0059001B0069001B0079001B0089001B0099001B00A9001B00B9001B00C9001B000D5DB8001B10B9000A0004F4B80027DC

005E0026005E0036005E0046005E0056005E0066005E0076005E0086005E0096005E00A6005E00B6005E00C6005E000D5D410500D5005E00E5005E00025DB8002610B80068DC00B800004558B800212F1BB90021000B3E59B800004558B800172F1BB9001700053E59BB004F0001002B00042BBB003E0002000000042BB8004F10B8000AD0BA002F00170021111239B8002B10B80034D0B8000010B80041D0BA004200170021111239B8002110B900590002F4410500D9005900E9005900025D411B0008005900180059002800590038005900480059005800590068005900780059008800590098005900A8005900B8005900C80059000D5DB8001710B900630002F4411B0007006300170063002700630037006300470063005700630067006300770063008700630097006300A7006300B7006300C70063000D5D410500D6006300E6006300025D303101220E0215141E0233323E0235342E02010E0123222E0235343E0233321E0215140E0223222635230E0323222E0235343E0233321617333733070E0315141E0233323E0235342E0223220E0215141E0233323637019C1E2D201007121F1822301E0E08132001273B9F60568D64373C688B4F4480633B203546272D2A040516202919223625141C334A2E26370B040A3E2802030402030B131019291D102B4D693F4570512C2E53734659823301E91F303C1D0E24201522333A1913251D12FE7C3C3B3762895150886439285078513C5C3E1F2C1D0B19160F192B3D242A513F2623192DBA071517160709110F091C30422641634422305473434772502B3732000000010038FFEE02B202D600270115BB001F0004000A00042B411B0006001F0016001F0026001F0036001F0046001F0056001F0066001F0076001F0086001F0096001F00A6001F00B6001F00C6001F000D5D410500D5001F00E5001F00025D00B800004558B8000F2F1BB9000F000B3E59B800004558B800052F1BB9000500053E59B8000F10B9001A0002F4410500D9001A00E9001A00025D411B0008001A0018001A0028001A0038001A0048001A0058001A0068001A0078001A0088001A0098001A00A8001A00B8001A00C8001A000D5DB8000510B900240002F4411B0007002400170024002700240037002400470024005700240067002400770024008700240097002400A7002400B7002400C70024000D5D410500D6002400E6002400025D3031250E0323222E0235343E0233321E0217072E0323220E0215141E023332363702B21233435130508862373863874F274B4236123C0B25323B22456D4C28294C6D443D6E25721B3024153863885151886338101D291A2C11221A103255703E3E7055323237000001005E000000A602C40003002FBB00000004000100042B00B800004558B800022F1BB90002000B3E59B800








12C8135A146014EA157A15D616560000000100000024006C000700000000000100000000000A00000200032700000000B800002B00BA0001000300022B01BA0004000100022B01BF0004004D0043003400260018000000082B00BF0001006600540041002F0018000000082BBF000200560043003400260018000000082BBF00030027002000190012000B000000082B00BA0005000400072BB8000020457D6918440000
00>] def
/CharStrings 36 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/zero 3 def
/two 4 def
/four 5 def
/five 6 def
/six 7 def
/at 8 def
/C 9 def
/I 10 def
/M 11 def
/N 12 def
/O 13 def
/R 14 def
/S 15 def
/T 16 def
/V 17 def
/W 18 def
/a 19 def
/c 20 def
/d 21 def
/e 22 def
/h 23 def
/i 24 def
/j 25 def
/l 26 def
/m 27 def
/n 28 def
/o 29 def
/r 30 def
/s 31 def
/t 32 def
/u 33 def
/w 34 def
/u0459 35 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-394 -411 1309 1192}def
/UniqueID 4088220 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93174D4E3C01712375EA6AD09BB8CBB6B1EDF2EE8AD6EA8A1100B27273DB2E6717CE9E0AF0D983B223584F83D00667A32874B0171975714E1B9533334C15E66942E391459DE389CBFF597AF5CD752761508253735767931B11580026E718344393F74D7180B8268A5DC35E726BB9011C70076D92CFF6B3F29108330D61ECEBB6BCA86E3D4FF6AAF3846F8725BEA8914D6DE727F8B2772EE1CFC3F43B34A5C4EF7BA2A9E5C3694138D2BFB2D107291054B3E3EC31E3B012A8149D593490917F1F9D721BC7B055E0B987E361637654B7F6E3A6BE38E0CC899530ECA63A850B213FC43361C1AE70C26EF6194EC2AE4D20FED71CFB0AA55662B9BD1A5996381A5A64A40B08D77C5A014C692AFC4CA2B1AC8A933B057B5362F649DCA17D887AA3EDB12C13C706712AE457F070555218DBEA6E72276F4B62E6CB86B1DD214C259EC607E1FF68416CFF15B00FF8BDFB73628A2E31F84663006BB0B19DAD3E7C2E52435AB99C0A3A2B21BC9C7C8F5ECB5C9B74697E28953167D3C329A35664EDC5AAE1F0174024A51AB3361AB76A072978AF7CE48DFEFE44652ED9B3A2B635F3B5367ACAD07F93591F7E10D972B7F35787DA848C9103B89088E992A434E4303DFA2824AA05D67E911109D3C022377F68547D49C95E5C305727B1590414914658BA4B5C2E13168527D1FF40D0564390920052A44AE9EB4163BC2A9A8B7A7194D0FDC04E37360999B3133A658E16F980E97A6093C7193E78C40ECFE433D073D295A092DFD2EB

6D05E3012F7A2E1DB30E7A59F92513D088A8F7B5BDE439D71152842A832587445420719156799DDD3E48AEEEA2D0EC280E4D0BC4B71D5527A35FDAC2DBC01E382495B3000564CF61FC11282DEA3C89239A52B35795F2B67E9D1693365FA786550A7AE6E1F00CC41ED7F304C95F99220F72D4131FA51AAF14331233F45FB13D2FBC5AAF0FAB82E6E257E120567AB97A42B52E79C70852BB0B9F0FF82AF2A641268ACDEAE71B5E10BAD604F55AD420D0B8D91490F2911C1E5A76AFE5D87C6BC7EF179EABABC8A3F799E31700D9CC3DA099AA6E8523FC85C6A2A419825750A8F8F937ECB3C864F572015D4129619A12C299488D22F6E09B95DDF8C4C9D2B2857CA179D5424323F04A2D8772C11FCC02FCDC4CC66722EBC2B5BA1193EE12E19CA4BA95816842A7A94582D15EA4EFDD95737343A42D9FEC0CBAF6D84A2C03E51A761781952DDC8785A3BA529FDE3F89BDBDDE2F375331EA0495F8E2A6DA3690E70EB11898EDBAAC1378A22F1EA33945569FC3904CA9A0F133A68DE71CA3C5E370C0E0BA50C4F8CD0BF211147BC9D4329FC415A6236FF9C337D199B0EC8929F2816CCC4765C3E7CF6808FE21DBC1E69B29AB583EE751664037BD77CF6F3800CD86E6256ECD55DF841A1750EE14CF52FAAD9085FFC10BE2B2B20D0C626D70D413A280EBDBD35E0C4F295F2748BB9DFD3BF503F8BF97461CECD95A6254E15C8EC9ED72ACC72DCB63300A3691851634CC7F64A13DF1EDEDD259ACC5CDD67FB930F9507BE2224C82197F2C293B201E4FE1809C4217E63089784664FAB4E14A32C880F07E1570DEFE8F270CDD7EDABF444F62CAFA2A6F6E5E46488A6C90C3754845A624A69CA4D3016285E25A3694A7F3DD8E84E3BD5C8EAB1C5AF36807610B2F3E919DBCD58E241EE46EF48727FCB88D1E1D262B68211A7E20E1A6365E25C4BEB33130CA55E47968804D5F975D6AC04F24A46F592F4515F72A43FAFE9926BD40B718781E502AD849B80A689A271E2D71922D713C091EC628CD653DBAF00CD075B3F3184EACE9B41E552E2908CA313707450A6C790FC0C62714CD4D5197AFD763FFD49A822A33D23298F00253D2077A9CC552FF5096F02FADB402905F1085B8708C06AB329CE74AD471EB5BEDCC4D52E1BC1DEF0C836823A0B27E20E45F31209FFF90DD76652CD7CE0641D3E3C326C41577A354E82D9838FBFDF4CD042CE5E9FEBD9ECB82B3552E7366D969BAB4461CFCABCEA517D25D031F2859858EDCAB6B86785097323076970E97DC8D74E7C57C8A03E7AAF8E5278074C761243E33F8E3B4AC8A06C379A11978CF2E4DCA30D91B01D7DB66997A6293FE778576DA7C313D12A54310F61477B1D2A3E522249A4E094840AC93858745F575E1F19ED89809BA5E3AAA38D1868322C1FB3566C2D65CF05135AF4EC907C8A87A48E46213F3FB112BA1223A6C57
8542976E5DA0E5DE8746756DF2A75B63DE836299495BCCCD80B0CE847E01086F8190BE44A6C4E2EB29D43A633658EFBDC6C5BAD30026F3DF3142879ABE21EA70410BAE6AE503659388F88E42C97483DC261D0EC8B4588B16467622EE13991533E179FFC19A6EA62E8B75B0140E2DEA04AA2541C8CCDFEA92332E5C44A10208D496295DB9AA4D371C55163DFD69093705C95280B4D61C86C3587B852E3D6ED159F718F7887DF14C73E62FA0C0FD9A8284DEED5444665E1D116F1D234BF05FAA483FBF45FD14A8D90E1F62B21BB2CEB3A3504E1177DF674E72D61CF341911AE3CA33B4B7BA4DED666FDED324DA930E86599C8110CCE5E0A4F121A0F15FD34EEB91BDA2C00B810743EE2AEDF25AC5B08D942351169D6C692420990CD9A56635870F463F271E3A1D07C0151A0B3312ACD25914DCA79E86B09811C8A6230108696886EBDD68E98024442B9BAE3A61D7868E024EC865522DE320C04FB9A4C47605700922493B71CDC39EB6DD471CCDA0D0988328217391A2CC9CCAB1326B6512DAAE0478544C6410F46E252FF00973C816F559C3F3E6895CE6AE7669C6E8F2541FF604C5A00C49EE6582998CBAEB365233C783D65C4B57A355F4DA2E82E9816142497E62AE6D64D3A83174185FFF7784191EF576BAA3BD3F29EF3B419257C93B290D37E5B54F92C319278DCF560EE39B87ABCA2800730FFE8A3F2BA15F8E83586D269DAF0A300C051A316BBAF5B2B5CFB5D34BF3A69021C2EC29D7B5E21400237F25AF1494751AC2B276E2D47089213CA79D7431B2FDC667D0BE516DA320DDB3B3D9860D742197248CB224212F2DF770D015C0C7AFA5DF5CCDB612DE9D8D6DD7051FD8BD4487F2146BCD278CA34AC769309C21BE91A54DA5EBDB4F1FA6FA5C371F00085B3ABD21E153EE7146C0216F8C38F1D133B6C52C6C85BCD26A2AC2E587A59E3B5BD7F466EC5F1720D6237FC9C3E5DFA86DB3F2E1537D3CFE2987C57370E761BBBBFDBAD85A418CED17A25CE5DFD62A57B0F9BDD5A88F4933544051088B8799B0D1551B373680E4540E5B8CE3652CE00AE846E6E2C71EA52A7372A35C715AC43EA6B993EAD1F197DF8A6FFAA1E7309127E75F3A4FF81D0E73E0C6A8EC3508E1B39A5A6FA253D98432DEB76B662DCBFFA165852D69ABCC63ACCD5E3070DE91B437223F3A699D8F5047E0A7BBF69EF1031F284C32683E5673CA1ACD4DCFCB71BF97AD4F68ECC4889E4C1026331A03ADD8B6E2F8491AF8D2534BD92D01B5FD2BAC200C94CA94595BAD597278AC1AFDE7759D76F0BC320E29A75859B6A94522A468C5DC6156DF905D8873B4E45BCA64427A979C03AEDCEFC12B836FD6A77459AFDE891006B4749B35503A62B414784B5992E1721678AA983440833035701ACAFC106AC301C53B664E5292CDA72C1CC2C1B7F9D7A04E37E93480166AFA08ACFFADB817

2658798486F1675C97CA583E90A1859CB4B708CFFF9BEB4A9B4B148BDAFA4377ED5CC32E2B349FC975FEF75ADCA1F17EAD0FC3AF0FEAEDE37CCB1DB2A25D87ED3D8763A9C89F49404E8ADDEBA755987ED22DCFAFD5C9D5EC173FD4FD154EE70CD4D38927B17AB04A12B61402CC0E5F418F91F15C56CB929404A5445D82E98235DB7BCFA62B4740C496D7D3DAF25046C17134226B13A4E5BC81ECF3FA21017399C9487F60745C8AC3CD5F6916EF789E7BD4FAEA6EC7953FD0B2E47EE899C3E8ACC07360C483D59AF420E14579D1FB062B0AAC94AFA4B019F3209F038B418F077421767F6C5CA912A4B37A403293EC7DE947F940287A2B09BBFDC75FBE38911EF9992FFEBC4E25380D2259DC58A98177E50FC0CE6005835769261C8FDF512AA5861EDC4C54C65B38AAB3F29C5CD29CCB40F4A3E42F050E171480B7B44DBB076B33C0F364D26536AFA5DF4FD5E4550F289D89A75DCAE774BD8A6FEB6906DA7E3BA43601CA0C185395EA5D1CAA033920AC14C3E3670B5CFD0DA4B263DAACEF6CCB7B796C03935ED327F0F4825FFCD1ADFD1F4A498A7448C30104C7D287621A45C2C053668097854F61FC4346599F44009D98ED22ACD553ED62A9FD57B6756E25980BC27EE95EA4909301984C14C33C5F881FF64F4A1F91586195371976C5926CF42037C197967661100841330F13880DFB85E17F2405AC43B5F5AABF0C50A6AF61CA46A90F5DFE97E902D6169B866CE093F6351486D839A9B04D6FC0C68C09F6BD3901D2E159E7B079C269A075185C6CF0EDDF8BC0A26CEE3FAF007C0D807CA5EF2DA3D8C68B237D996FC010A39407452B29C2FFA11C149E52B2CBC9E5DC42D252C3D8ABB3135A6B75E14C53BDCED92927F2989E53CC191245150DF231B31BE00A106C5CBD32CB1FC3253276E3B1179BF3BE9EF24F88592EC91B2C4C1CC77E7677A854AE2A680D98BE03E38F508C5C3B9D94039372EE6AA4207A7B4A65E3FDE98DACA8C5396B8E92043274970B278EAEFC9319FA94AF2D7F3E2DEC74FD77017D6FD26300B6BBE8BB9E5104149E4C1C7901A0FE94F0AEE098F513C49BC2193DC3C219BD3934987DFC315C94204B7851571A5D4AC25B10F8047336F28901018F74A5E1C3025421933EE79A766FF57CC6B91D15D0BBBD8C838939DAD12897F3B65B5DF2DF58BCD0093EEB41F3C52FB708EAC22251680589FA7C5AD9B554BED8A690E22FFEBE95319DD2C1C353CB2DD9908C0E3D53E35ED5DAEC1FE574E96FA6DF0F1C777EA8AF274D0054AE1FCBA6D37BB1C4FB4D4FF69DA819BB9754EB725BB449EC46D5D4BA930974244543A87A93200729ED597EB890DFA375A23C71DBFBFB3E8BBA36ED23C089D9F179B08957CF60A6203062C6438002D0A98431CB79C6E8DF68D73406A09C2679CA45EB3F748167E09699799DB4546B84886A1157B53F97048DDD
1DCB09140F60C540CE39E0288590FDCA67CD22AAFB6CC1A9CCC3B92D1BD2E9B51D8C8A0D53E33100D83B57CD6F93D005A582A6208C6E9B8549DE348D95B701A4D95A6107251B06DAE1B353F2626FB288DC67CBC2A88D299FFAF26F7609D8D69BCD8EF72FED56474F19EF655B3E96CE245064C658DF2E31E31D054F2753874E6FCCB458E459EFACBB8BF6535160943D39218044B287B4750A5F0E583F9263E4D74FD99161F825773434D17BF19F751BADE57ED2440ED16BD0887070F468E49866530A7AE08F0DDDA288B0C5CF888B55F099A48E7DD0AEB07E0A545F1495E3361A5AF43BAFFCB1E666BD1FE74F99780EB9AC18774EDF6E23FCF4196BD3F39FBE9113AF8A706E2A58B6FEC9C93F5BF5166B00A4E7E1F6C42FC2F7B1F2C068E76F7C0D059B33449DD7ECCB560AEE78191F6678772E899EA67E29589050FAB43FA2F8274C3A645D3DDB452031228966B12753399F42E47557F322681A3BBEBDA830B0A0215DC3D12745A4EEC5CC10CBE3FC5CBC6EB56503924F861EB1DDBA28229D7CBCA660C4FC16E5F82559883B76429A1D548AAD0C2F52275CF530BB2B138ECD9D87F262E3EAB027F459347DD1350C231D9995A4ED48279F6D1F23D184A387126D487EB1EB01942E83CA18C0D9DDB032540EF72AB9EE19592FC146F49BC21901838851DE28BEC8948FB50193D8D900721B6B31A333C5B419499D57C0BD32F28F1BE6E451C5323F8B5162A5018C794BC547540897BD9C07814D8CC9A5E01EBFBB60FFA519347727B9BD489EC08BD6942989448B4E792ED02D905E70AC6F24D314D21557CEDD5769E36AB4DF5B117262DACC7CA22841D7E659A76A0DD0FFC6E791A302C40BE3C54E5E22DBADC43550520A25E58BC4612BFB927DD859508B968A67888CDD28676F46D3D3208B10B02EE2D43CD2F678FBEB977653BCA048F747F7070B3AA91268996A802ABF44D3E5243FD1335528FA15422B839AB443E13FB76B02C0F91E0D1B5BC28BF7DB3FC72255F06F9ED9799C35155AC141D0EDDDFF63EAAD8C351C9982C1BAA913B2388E05FAAD376B42278364DC4D03
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/TSCJPL+AvenirNext-Regular cguidfix
/F1.1/TSCJPL+AvenirNext-Regular renmfont
%RBIBeginFontSubset: JZNZHC+AvenirNext-DemiBold
%!FontType1-1.0: JZNZHC+AvenirNext-DemiBold 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /JZNZHC+AvenirNext-DemiBold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /J put
dup 34 /o put
dup 35 /e put
dup 36 /space put
dup 37 /S put
dup 38 /m put
dup 39 /i put
dup 40 /t put
dup 41 /h put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -463 1 index div -459 2 index div 1421 3 index div 1206 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/space 1 def
/J 2 def
/S 3 def
/e 4 def
/h 5 def
/i 6 def
/m 7 def
/o 8 def
/t 9 def
/u0459 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-463 -459 1421 1206}def
/UniqueID 4501700 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B5BF8E443649147905228038171EB73F3E0B647FF27DF9EB6CBB52D5C97363BE4D70B47DF3D9D6948F30C211637D781DF05DB77BC9DC8EDD687EE2228C82A23E9C2F4ED38F37B390C73D0B510DEBC84052C5701F354C5823C6A1564155F365CAC910258BD5898C7B60702AA64542DAF0C80D024ABC44DB34C5C6AFBFB6FF5AC049E02F0D765612C038035D5C85900F5B2F045F01F10B1B26EA067958A2C7DBEC4512BC8D03C2BA08C88371E2D538A8D7285D531EE4BF9A0A7F8D1498C3598BA9D51716327926997DDA728DC97D1858BE1CDE526AB0E51DA254F6520D35ACF17ABD8A0D6DF73CBBCEFC00488950B634A6D3ECC6B2F44F9B0E77CA352B1F29C0DE2915203AB2F762787649F8F69CA4D1E2F53EC105E08F6912182A7644C687E70F5235FE280D497115A5B450834CD917D10F973443D73628695A8E9AD85533D481F149219A5B93B842BFB8B2CC38BCB3413596A11AE2D318768DFFFF5B8A7F99E5B8B4D23084CBEA59DB97B25C16DA9149B216FBF589D24B262DE2439638F97173B8C12D714EA1D205A00D34726AB0372DBEEB4B78C80EA81EFECE8E9081160E1EEAB8AF05C40BC36682163860C7913300DF6FF7D5DBF82DC591B868B4CD1279BC2FA3052B7CE3274D373D5F866B3E6E8CFF81D6D70B54EC50B0E5C0D651503B5BD3D4B964D0AF21A6D8A4730DC6190BF2669C7D08ABF20B56703BF4CBD08EC1E61BA029AC98C820DC754DF21A5423900AF2AE83DE188C97E9AD267D9BED61EF9E

D2487B80BDB563B1A92CA449F3B006BAFAF1857FE68FBDC1F5F9B0D50547006B30E8FC09B76D8EF7C71E53F2F0C723CB10783D00B80E11EC43C37722516BA2791815F32EE070A6F4366B9F42E4081B2038C614694CEB9B926AD622B6C83A810539CC84758F38D88ED68594AA8883896E9CE12766A456412E5D38820C01FDEBF5847D15BDAA9FA464A28D8FB5E82D6AE44EDE7DE21088E62F9198A81A9E06F5B03263DFB81CDD8DB81D05647941CCDAC062DBB04AA8024F228F06DC997541C50DC197C3C2545D34940F06468776606B428684AAF6A279CCB8985062075E48499D903E59322A7D8EDBADE11C5187866970D288020C375F7FD2315277904E064D77BF5BC73535D25C267944B1D2E706B963D16BC1E359DBA5105CC1FD795ED7042EF90AAB3C7CF47A1B8B7D64B15398F2A38C3B1BA16ABF78D21E1AF904C99DF5BBA0DB582EB0273D772889401321F4779D300B764E74F09929125A89FA2F8980A0D4ABC54A7CEAB85FE8A09CC9470F314AA249F9F095BC327E5898D34AAB5CD383B0CF159219BC7341D55DA6EEE64306AA1664C8BE000FA94C1C71F5CB272DD78EA8A87B22C34BAEB2F374149221C468CB415BF5902C82EBBF3E8AA4319D2BF02A6D20C352EA0F18956B8A963612CCEA0B97E7A4718106D88611F900F74977E3979C2813F5C85D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/JZNZHC+AvenirNext-DemiBold cguidfix
/F2.1/JZNZHC+AvenirNext-DemiBold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1039 697 rc
0 697 m
1039 697 l
1039 0 l
0 0 l
h
f
0.60000002 i
0 697 m
1039 697 l
1039 0 l
0 0 l
h
f
Q
0.60000002 i
0.29411766 0.4627451 0.98431373 sc
q
297.07031 491.79758 m
304.19058 491.79758 l
304.19058 460.88855 l
297.07031 460.88855 l
297.07031 464.12543 l
294.15076 461.37512 291.01074 460 287.65012 460 c
283.40735 460 279.89975 461.54437 277.12723 464.63318 c
274.37573 467.78546 273 471.72043 273 476.43826 c
273 481.07147 274.37573 484.9324 277.12723 488.02121 c
279.87875 491.11002 283.32333 492.65439 287.46109 492.65439 c
291.03174 492.65439 294.23477 491.17349 297.07031 488.21161 c
297.07031 491.79758 l
h
280.24631 476.43826 m
280.24631 473.47641 281.03394 471.06464 282.60922 469.20288 c
284.2265 467.31998 286.26385 466.37854 288.72131 466.37854 c
291.3468 466.37854 293.46814 467.28827 295.08545 469.1077 c
296.70276 470.9906 297.51138 473.3812 297.51138 476.2796 c
297.51138 479.17798 296.70276 481.5686 295.08545 483.45151 c
293.46814 485.29208 291.3678 486.21237 288.78433 486.21237 c
286.34787 486.21237 284.31052 485.28152 282.67224 483.41977 c
281.05493 481.53687 280.24631 479.20972 280.24631 476.43826 c
h
318.6037 515.82495 m
318.6037 460.88855 l
311.51495 460.88855 l
311.51495 511.73746 l
318.6037 515.82495 l
h
333.04834 524 m
333.04834 460.88855 l
325.95956 460.88855 l
325.95956 519.91248 l
333.04834 524 l
h
347.49298 491.79758 m
347.49298 460.88855 l
340.40421 460.88855 l
340.40421 491.79758 l
347.49298 491.79758 l
h
339.33304 504.64987 m
339.33304 505.8981 339.78461 506.97705 340.68777 507.88675 c
341.59094 508.79648 342.67261 509.25134 343.93286 509.25134 c
345.21408 509.25134 346.30627 508.79648 347.20944 507.88675 c
348.11261 506.9982 348.56418 505.90869 348.56418 504.61816 c
348.56418 503.32764 348.11261 502.22751 347.20944 501.31781 c
346.32727 500.40808 345.24557 499.95325 343.96436 499.95325 c
342.68311 499.95325 341.59094 500.40808 340.68777 501.31781 c
339.78461 502.22751 339.33304 503.3382 339.33304 504.64987 c
h
377.46991 491.79758 m
384.59018 491.79758 l
384.59018 460.88855 l
377.46991 460.88855 l
377.46991 464.12543 l
374.55035 461.37512 371.41034 460 368.04971 460 c
363.80695 460 360.29935 461.54437 357.52682 464.63318 c
354.77533 467.78546 353.3996 471.72043 353.3996 476.43826 c
353.3996 481.07147 354.77533 484.9324 357.52682 488.02121 c
360.27835 491.11002 363.72293 492.65439 367.86069 492.65439 c
371.43134 492.65439 374.63437 491.17349 377.46991 488.21161 c
377.46991 491.79758 l
h
360.6459 476.43826 m
360.6459 473.47641 361.43353 471.06464 363.00882 469.20288 c
364.6261 467.31998 366.66345 466.37854 369.12091 466.37854 c
371.7464 466.37854 373.86774 467.28827 375.48505 469.1077 c
377.10236 470.9906 377.91098 473.3812 377.91098 476.2796 c
377.91098 479.17798 377.10236 481.5686 375.48505 483.45151 c
373.86774 485.29208 371.7674 486.21237 369.18393 486.21237 c
366.74747 486.21237 364.71011 485.28152 363.07184 483.41977 c
361.45453 481.53687 360.6459 479.20972 360.6459 476.43826 c
h
391.91455 491.79758 m
399.03482 491.79758 l
399.03482 488.9415 l
401.51328 491.41678 404.30673 492.65439 407.41531 492.65439 c
410.98596 492.65439 413.76892 491.52255 415.76431 489.25885 c
417.4866 487.33362 418.34775 484.19199 418.34775 479.8338 c
418.34775 460.88855 l
411.22748 460.88855 l
411.22748 478.15192 l
411.22748 481.19839 410.80743 483.30341 409.96725 484.46698 c
409.1481 485.65173 407.65686 486.24411 405.49347 486.24411 c
403.14102 486.24411 401.47125 485.46133 400.48407 483.89578 c
399.51788 482.35138 399.03482 479.65402 399.03482 475.80359 c
399.03482 460.88855 l
391.91455 460.88855 l
391.91455 491.79758 l
h
432.98145 485.13342 m
432.98145 460.88855 l
425.89267 460.88855 l
425.89267 485.13342 l
422.86813 485.13342 l
422.86813 491.79758 l
425.89267 491.79758 l
425.89267 503.12665 l
432.98145 503.12665 l
432.98145 491.79758 l
438.49493 491.79758 l
438.49493 485.13342 l
432.98145 485.13342 l
h
459.52423 486.52972 m
453.66418 483.38803 l
452.74002 485.29208 451.59534 486.24411 450.23007 486.24411 c
449.57895 486.24411 449.02237 486.02725 448.56027 485.59357 c
448.09821 485.15985 447.86716 484.60452 447.86716 483.92752 c
447.86716 482.74277 449.23239 481.5686 451.96289 480.40503 c
455.72256 478.776 458.25351 477.27393 459.55576 475.89877 c
460.85797 474.52362 461.50909 472.67249 461.50909 470.34531 c
461.50909 467.3623 460.4169 464.86591 458.23251 462.85608 c
456.11111 460.95203 453.54868 460 450.54514 460 c
445.3992 460 441.75507 462.52814 439.61267 467.58444 c
445.66174 470.40878 l
446.50192 468.92786 447.14252 467.98642 447.58359 467.58444 c
448.44476 466.78052 449.47394 466.37854 450.67114 466.37854 c
453.06558 466.37854 454.26279 467.47867 454.26279 469.67889 c
454.26279 470.94827 453.33865 472.133 451.4903 473.23312 c
450.77618 473.59277 450.06204 473.94183 449.34793 474.28033 c
448.63379 474.61884 447.90915 474.96793 447.17404 475.32758 c
445.11566 476.34308 443.66641 477.35855 442.82626 478.37405 c
441.75507 479.66458 441.21945 481.32532 441.21945 483.35629 c
441.21945 486.04312 442.13312 488.2645 443.96045 490.02045 c
445.8298 491.77643 448.09818 492.65439 450.76566 492.65439 c
454.69339 492.65439 457.61288 490.61285 459.52423 486.52972 c
h
W*
0 0 1039 697 rc
268 529 m
466.50909 529 l
466.50909 455 l
268 455 l
h
f
Q
0.27058825 0.27058825 0.27058825 sc
q
0 0 1039 697 rc
1 0 0 -1 114 367 cm
/F1.1[ 28 0 0 -28 0 0]sf
96.867996 32 m
(!"#$%&'\(\)*+,$-.$/)[ 16.240000 16.240000 16.240000 7.000000 16.772000 7.000000 14.000000 16.324000 24.724000 17.108000 16.268000 17.836000 7.000000 15.624000 8.876000 6.664000 0.000000 ] xS
248.68401 78 m
(0*1*+.*)[ 13.272000 17.108000 9.576000 17.108000 16.268000 8.876000 0.000000 ] xS
189.856 124 m
(23$456$768$)[ 23.800000 21.392000 7.000000 24.808000 16.240000 16.940000 7.000000 7.280000 17.444000 16.240000 0.000000 ] xS
249.384 170 m
(9:+:,:)[ 19.656000 14.952000 16.268000 14.952000 17.836000 0.000000 ] xS
1 0 0 -1 114 436 cm
127.36 33 m
(;;;<:==&:+.><'*\))[ 20.888000 20.888000 19.880000 7.280000 14.952000 7.056000 7.056000 7.000000 14.952000 16.268000 8.876000 12.432000 7.280000 14.000000 17.108000 0.000000 ] xS
1 0 0 -1 577 436 cm
0 33 m
(9*+>?=.:+.)[ 19.824000 17.108000 16.268000 12.432000 16.268000 7.056000 8.876000 14.952000 16.268000 0.000000 ] xS
1 0 0 -1 577 368 cm
0 33 m
(@*A<>\)&.\(B:==&:+.><'*\))[ 7.028000 17.108000 16.016000 7.280000 12.432000 24.724000 7.000000 8.876000 16.324000 22.400000 14.952000 7.056000 7.056000 7.000000 14.952000 16.268000 8.876000 12.432000 7.280000 14.000000 17.108000 0.000000 ] xS
1 0 0 -1 577 496 cm
/F2.1[ 36 0 0 -36 0 0]sf
0 35 m
(!"#$%&'\(\))[ 17.928000 21.960000 20.664000 9.000000 20.664000 32.040000 9.648000 12.240000 0.000000 ] xS
2 J
0.7764706 0.7764706 0.7764706 sc
1 0 0 -1 518 513 cm
1 0.5 m
1 329.5 l
S
ep
end
