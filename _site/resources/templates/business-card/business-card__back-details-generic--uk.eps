%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G1212) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1039 697
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1039 697
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: KXKWVU+AvenirNext-Regular
%!FontType1-1.0: KXKWVU+AvenirNext-Regular 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /KXKWVU+AvenirNext-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /O put
dup 34 /f put
dup 35 /fi put
dup 36 /c put
dup 37 /e put
dup 38 /space put
dup 39 /four put
dup 40 /comma put
dup 41 /U put
dup 42 /n put
dup 43 /i put
dup 44 /v put
dup 45 /r put
dup 46 /s put
dup 47 /a put
dup 48 /l put
dup 49 /M put
dup 50 /S put
dup 51 /b put
dup 52 /u put
dup 53 /y put
dup 54 /G put
dup 55 /o put
dup 56 /t put
dup 57 /h put
dup 58 /m put
dup 59 /p put
dup 60 /three put
dup 61 /zero put
dup 62 /seven put
dup 63 /Z put
dup 64 /N put
dup 65 /w put
dup 66 /period put
dup 67 /q put
dup 68 /at put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -394 1 index div -411 2 index div 1309 3 index div 1192 5 -1 roll div]cvx def
/sfnts [<

190023002900230039002300490023005900230069002300790023008900230099002300A9002300B9002300C90023000D5DB900050004F4B8002810B8000FD0B8000F2FB900190004F4411B0006001900160019002600190036001900460019005600190066001900760019008600190096001900A6001900B6001900C60019000D5D410500D5001900E5001900025DB8000510B80029DC00B800004558B800002F1BB90000000B3E59B800004558B8000A2F1BB9000A00053E59B8000010B900140002F4410500D9001400E9001400025D411B0008001400180014002800140038001400480014005800140068001400780014008800140098001400A8001400B8001400C80014000D5DB8000A10B9001E0002F4411B0007001E0017001E0027001E0037001E0047001E0057001E0067001E0077001E0087001E0097001E00A7001E00B7001E00C7001E000D5D410500D6001E00E6001E00025D303101321E0215140E0223222E0235343E0217220E0215141E0233323E0235342E020122425936171736594243593616163659432F3E240E0E243E2F2E3E240F0F243E02D6416986454585694040698545458669413D3A5A6F35356E593939596E35356F5A3A00000000010031FFEE01F502D600350187BB00170004000600042B410500DA000600EA000600025D411B0009000600190006002900060039000600490006005900060069000600790006008900060099000600A9000600B9000600C90006000D5DBA002F00060017111239B8002F2F410500DA002F00EA002F00025D411B0009002F0019002F0029002F0039002F0049002F0059002F0069002F0079002F0089002F0099002F00A9002F00B9002F00C9002F000D5DB9001E0004F4B80037DC00B800004558B800122F1BB90012000B3E59B800004558B800232F1BB9002300053E59BB00010002003400042BB8001210B9000B0002F4410500D9000B00E9000B00025D411B0008000B0018000B0028000B0038000B0048000B0058000B0068000B0078000B0088000B0098000B00A8000B00B8000B00C8000B000D5DBA001B00340001111239B8002310B9002A0002F4411B0007002A0017002A0027002A0037002A0047002A0057002A0067002A0077002A0087002A0097002A00A7002A00B7002A00C7002A000D5D410500D6002A00E6002A00025D30311333323E0235342E0223220607273E0133321E0215140607151E0115140E0223222627371E0133323E0235342E022B01D61F223C2D1A1627331C2D45153D2166412A4B392146353D52253E532E4E741E441254361E392B1A1F3442231F01920E1F32231E3123132A292039371930472E3F550E020D5B48334F371D4B46193339152738242837220F0000000002002A0000021C02C4000A000E006BBB00040004000500042BB800



080004F4B8001210B900150004F4B8001BDC00B800004558B800062F1BB90006000B3E59B800004558B800132F1BB90013000B3E59B800004558B800002F1BB9000000053E59B9000D0002F4411B0007000D0017000D0027000D0037000D0047000D0057000D0067000D0077000D0087000D0097000D00A7000D00B7000D00C7000D000D5D410500D6000D00E6000D00025D303105222E0235113311141E0233323E0235113311140E02016350663C1748142D4A36364A2D1448173C67123754632C01BCFE4C2B513F27273F512B01B4FE442C63543700000001001F0000021D02C40009003500B800004558B800082F1BB90008000B3E59B800004558B800032F1BB9000300053E59B900010002F4B8000810B900060002F43031090121152135012135210217FE6301A3FE02019EFE6D01ED0288FDB8403C02484000020037FFF401C901E0002500360182B800372FB800002FB8003710B80020D0B800202FB9002B0004F4411B0006002B0016002B0026002B0036002B0046002B0056002B0066002B0076002B0086002B0096002B00A6002B00B6002B00C6002B000D5D410500D5002B00E5002B00025DB80006D0B800062FB8000010B9000F0004F4B8000010B80017D0B800172FBA00180000000F111239B8000010B80035D0B8000F10B80038DC00B800004558B8000A2F1BB9000A00093E59B800004558B800132F1BB9001300053E59B800004558B8001B2F1BB9001B00053E59BB00250001003600042BB8000A10B900030001F4410500D9000300E9000300025D411B0008000300180003002800030038000300480003005800030068000300780003008800030098000300A8000300B8000300C80003000D5DBA0018001B000A111239B8001B10B900300001F4411B0007003000170030002700300037003000470030005700300067003000770030008700300097003000A7003000B7003000C70030000D5D410500D6003000E6003000025D303101342623220607273E0133321E021D01141617232E0135230E0123222E0235343E023307220E0215141E0233323E023D010181403D2A4819261D5F3C2642321C04043D0304022051391B392F1F375C7740142A55452C1320271424382614012E3D3C1E192D1D26152A402BCD1B3A141128132F290F223627363F1F09350715282119221509192B381F230002005CFFF4024502F40016002A016EB8002B2FB800172FB8002B10B80002D0B800022FB900010004F4B80004D0B8000110B80006D0B800062F410500DA001700EA001700025D411B0009001700190017002900170039001700490017005900170069001700790017008900170099001700A9001700B9001700C90017000D5DB8001710B9000E0004F4B8000110B80016D0B800162FB8000E10B8002CDC00B800004558B800092F







00>] def
/CharStrings 38 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/period 3 def
/zero 4 def
/three 5 def
/four 6 def
/seven 7 def
/at 8 def
/G 9 def
/M 10 def
/N 11 def
/O 12 def
/S 13 def
/U 14 def
/Z 15 def
/a 16 def
/b 17 def
/c 18 def
/e 19 def
/f 20 def
/h 21 def
/i 22 def
/l 23 def
/m 24 def
/n 25 def
/o 26 def
/p 27 def
/q 28 def
/r 29 def
/s 30 def
/t 31 def
/u 32 def
/v 33 def
/w 34 def
/y 35 def
/fi 36 def
/u0459 37 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-394 -411 1309 1192}def
/UniqueID 4088220 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9319293CFDFFDF66CFE9885998F65FE6E49EC9C7C15B8E78E1E7286DA44085EF99E33043B7D8C794BE67402ECB89311B24442F9813B403874768F88F0DF9331D4817C5DB33393CE34C689925B1A5097312EC754A66F8A92B35898E54E768BAEE3640A04E42C24AC84FEDEA5689C64E9785623B3600D40E2B6093172143FA79872DC26A1102B5B8AAE93C6E480265133614660BD679FBC19DCF6876C3FB5214D6266B696CBAEE68F373AE298CE9699766F90984717F8BB6FAEFA661B0E8032ECBA7BBBF0489FBD5717BD4D0559E6D18E0F1515152B603C774509844FCDEF73E9C34A9206115A14EE1428BA1A034D1FB57F352451930A1D4DEF09B5499559C5E0B60349D378A2810339CAE2646B273D56665F1F8DA858093D4E248C285FC9B9C07FB0F983A70224C2263FD4393276C04DD6B13E53C9A91AEC55BA8AEC8C054C05672D6340527F5BE6A020016ED5D4ECAF6C93DAC3BC9A2DDE03FB799AD8B2DB9BA0E00FFA3C8A26AA76B7809C5A8CFB9F1211B46432BADACF83C065C676E2B9405AF4BFB3FE345C519A7A59687C3F77565EF2DE04D3F6DC433368EFCCA6767D9059466432DD0636393B33AC59668960EDC3DABE0EA1817745C6FDBAAFD6D4E3657A0C6B1963CC5683F47BAD1B34C3C7099E6004AF88615628D625AB3DAADB1C7BE3A433C2039CC4E4210FA290752B6B08D7612CD92B15EA1A27A8ED5F28B26CE6BBF5671C856E151A0FE2B08BEEEB94BDCA88375CE815A55D28C845112FBDB4E5A9C

9B05AE5D58413394D9DA377D7545310E2722A04A85EC46385D2DADF0E34D0A80B5FBBC0EAD0EA51700CC1BDB9E877F1D98B52C20BC795176D9D16B1359E065A0CD5D3107A568C84FA6E5CE05842C3E5BA51A48EC7FB7249BF4593E585FB6ADE4BF3F7290AB7DF50561A8BE73B3FF0ED086AAACB7E56C929B81FA00980FB44C83F03F8EF56CD64B0015CE299865DD1F04F8EFDD3CA31CB41E7082485519E9F4BC825F8AEF0D60290299140C7C236D90E077CF85ED4D5376A64AD0E2EF3984967A35DC02965DEA60931B4A3C191F1BDF63940D799C7B0754B22EC047660A9CB881E4B10B19844B5E339CA3E239A3CEFAC6EB3EE8AF76494D0D1FAB48502F286A64CB0EB43278E1CFC476D8D3E055A194BEDC550B9C3C81FEF24C3C242F2AC11C19D6D6CD1059332B869013E90772ADD67EC0388AEEEB3E49A41B09E6BC5140C585436405579A43E11DD62A5FCF5FC796B703907780C47ED109C198BAF5537F4D5672D8F7BF177D86BB9C04BC2FAE3521BCCD6FB950E4B83456AA717BC12A122C607054F481556BFB609FFC1BE40823FADC65F521CE0F37D141C84294E706BA8226BC72DFB6FE5C6D23011C8A64FE63EAD30EF5E71CF1CDE19030E24E461D7FFF9844EF991B24737A7BA31B832B9DDB0E3599F9F21B75B41DB0C05D336E5DB7630C86955813B4B9754142C585A890263BC78F43848BB3493402E1D5BA4C62E3582F8EF0ECCBA7E6ACE159EEB02C35D5B4119FDBA605DD57E592AF145114B3786C9C89D57AEA6834C89D600EF0C9FDC57365E33C251FFD7E3B3ECC5972ED180DCBD388A133C9FA7CA016274107E43C38A2E4204F193C2A2101944831CE36C75DDC5EE05B30DA0CB18A6F500273B2BADC42DA85F88A084ACFF35AFC020819E0CCB12424BF62626A43E302E7987EB7E57997377914360B3FAE0F4FED179CC599F16E918452CF9681D4739707AEFD23395CA158ED6D713338C3BF7179A2618C08281FD2D0A7C81132D23107DEBF92A453894B7119E9F35414B6E6F841BE48AD9A2FF15EEDD315C4A8C6D971A7F3890E15AD68EEB1ABCF8978D6E03DFE242480D8D12013BC8CE8C5D0D88B70D563D7ECE940080B0D028562F04C75784C57C8FDBCE469C427FCDB96123D8C41C5C6DE69E0DBD875D8236C1E00D97EED3E71FB4494D003B8D403D1D79B31F436ABCF1FB5CDF9AF97BC0B7577745B3432971CDFC772D6EA5168BB627971E5E6B5873325851589C56C90AE84B8203D91151C9D1B2970AFD2C867746030CE2F31A9F6060D85B9DEC3CFF40F31D1AA01D64149595CCC9FC03D897ECF5A3AE80E221C502E92566B1D82F208B35ECD0654A63ABE88CA848C0B1E6370030D0BD5CDDBB0A0127224F2B51EDD924F698FB44D33F95AECFF1E422D62C2FD216F025E3638BBAF6C0DCB297045A17DF3587B42912756513D4476AE478478

57AE483A951863E14DED535F19C9274DB941774857B8BB665202FEEA0DE9A86C3D4AAE9B077EF47D9F6139972B8D63741835CF0262F4E76400E0DAC0D37647EC9D51E3AB9FFF034500DECE43A8E6E6D6B8A15AE40E54D999DA9AFE5733505A9C9FDA8C0329F7C7CE7D391C06BDFDBF74707573C5ABB06922BCD35420771778DFD174A7606A0605EF2FCE561F298F061D54E0016ABF646D4D527942C9C1FBB75951A6708FF35448CC1C8EDDA6CC6C20A64565B0ED3F28A2BE4457318787A5D52AC0D402C86BB6FC60B0D892AE25C7A3EA61EA260B526281284AFA58BFAE789818F1266FC782560C7B4496EE0F2D576A9A663F8A820ED4872D2C7E24C1348E29ECAA8EC34C64C91BAF2C207CE7EC79B21157AA2D92298FB3B183A97252F98B39C6C64FCC57C52D8BC9CF7AB078B9C8111840C606E68D822EECCF01BA8EB66DE8EEA9C7061C3EC82F7D7E4DFD676D4368E0C4F7990E5292B6C3C5851B4959A56B38FC700EFB079D0CCF466F61FFB4B344FDD9E87C69C020013E68F8AAB7B558FA7308B5DFE3B2CC480BB25BD816FB8CFCE1617F78A09DBA626B8682E3DD3182EB27D3A55C2D7C01D594DC39942D08F55D8F60C7A94028AB3FF60150162D1D99B15FA65B31058023A44C57C7E01ADD3226249CF8847D638D201E21A6D896EA4320757551151623EB2FD2970FDCDBF5F280E35C63B50260647B80231E6BF1528F63047B5585AAE4C9CFB9E9E215612056750F0053BEAECB6C509C57267D3BF61F720C8FBDC5BE518B85CC219EEF7DF673E7D07E84C8ACF3FD7A38B8D5C24E133F8D01E8E2A2E2D26EC88B946765DE964A5369368B8A4026F5891657BC4107D22D46D5A975567EB7B8FFDCB8FA433A526A3CBF38070C55B3058A4406EC0F02C48217DC25D0184B9C4B3BA3ADBE95810A769B99EE4D51CB6AECFD98A53A5AF34CEEBE3B1CBEE607DD1B5BA40ABF026987E726D780EDE61120D259E0B256AE20B0F8C481CB6C19B6E6F4C1AD88BBBBB74C25E8C12D08A196C23C5D68A849CBCD6E0EEB19C68203C833BBBA4027D5388E9E17205E4F8C2073EE2366829C48C9C3E6CF68142C7CC95C6F8B87323CCE536148568DC55889747593EC059E8933C5C4EF53E307E76013A6802C8880FF0335BDE9BE1516A43810653D7C3AA98749DDD94F050DF4842F61910DD2D46D9752E0CBB786417B8838C39B0C950DBE358F993D8B22AAC1D24455331070C34E40E89B1DA2512F99F90F54544499D11BA86AF50199AE3F72BF73DFEEA9B3548102CF90A75A2B3B23C1AC4D297CA54F8E1B5210E4BFC44D64BF4207FDAE2BB356A45BA928A836F7B939992C7ABD5C338335AAB3DBD12D3EA9395149F6F3607CF94BA4C686F3B806C3F60F912C716F3F94D6E464717D497A33351DDEBA29A5CF97202E97AA7095D3661E69C3673037114FF8EB04A61B64B498
394F7C2F640AB0BA2E026B3A417578251E3D27B081D631FD09A67D7E2D78C604A2E2C5027FF8081E7BFEE601A312FDC2D457ABBDB2A85E92042DE9916D8F62FDF12971116D44D34DAAD883A1BE33278CB6BD26FDDEF8E6D1F405A58061CB065D6AA6AF123B15E040D8BF3EED9D13D1337897748ECC61A7FA134EAAA156BE3E0223DC90883C6E14C5C5B33522D0229EB0B75CEEF0092B696C47F42F13D20885B30994E6EE7EA37D6A081A0E08F323792615D5DB5FD939BB10C19C9715FB870AA38262A1414966C98DAD774835A9D62FAC0887C70C89854F06D2538B91D510F8A9B627B60F2EB0545EB3B562E0954811A2F7326899AF7FFD5B05565BD80760ACE0C400A4846EC79363D4FA2E974B7B18CB74F03FAA4FEA4DAAE37B43256EBD4AC618E82EA16CA2B9E8DDE95BAADD55821ECB00F2C1864AD37D1FDE51DD7FC954A2A5B32333A8B68FE5258DC25015D15E6CC91128F66F4BDA58375BB82206ED904FD59620C9B39A6E5E6F0D2C7B2DE36B1C6D07E67BD01674FF18B45BDC7B9CE284001CB189051EEFEE7F75A5D9768C9320E9914342A994873A008AD292066FC1B591745516A84B07DDFC4421522E5DF4678235781EED7252BED4C9195B5F76F7B88B5C81B7B25D62E384513925C03859D28CF487AD38D16A20DE566E5F1518829987F3F5BBC4FED159E80763A027A924E67A386EB7AF6D57D7A7DB768B12AA18472CAFB4B7A3D4873096EE7013D0A806C3AA07366821714780ABBEC6F286072DC205FB4F31F05A15AF08E7B560EC4F62376A017349DDD9FD5DC98FABCDFAB6ECB3744EBB17EE1AE900BD048EEE6AD29859660E7C92EAD91826E921921EEA87CCF6FD8DEA67C38CC9FE63D4CE77BFF83A65A4516010C568ACEC804FC574EAB497E471C001471EF8CB9AFE8351786F41B69D3001E8B50CADC648B46DC193274ED2ADF4F0AF7922C0FEECBC74D36C2E47787F508C2A6852100C86C0D5F876312CF212D88FF867AFC5CF6F3B9FD743762D668129D213B07832CFB8A07031075A29FDB1F5D0253163DD3427728CC67034CB71D5C5193C3B7F0309BF3CA3C412ECD172A9854E0410B22326BDAD4BBBDA3657C07C307B456A2E1A94DD0D969A39B914303222AD6ED78986044DD33CEB36A419A22B91BC8969E101F72028FB2301B255E3FD1E5F38A8586492E62D50B36206BDA9DC430011A487CA24395E5FC8D8A27D6E3AFFA44286C553A85B4E2E9665578CFA7A8C6039D1E0ACC8241C0DD8A335CEDF0EDF2FCCE65E29BE8FAB316B84BB75B169C06DFF014CB1FC5C052DE4F81867253291916A176D4260F2FD8159D654F1A78813A32FACBBC530D174A7324B178859D62BBF6EA63A9FEE59EC5A8BDBC645E5E29D9CDFFB590FA30EFCE1EE7A86398E1B1E8CF6D4F22BD7481F7CC785A677D71192F15D7B686210E8D068EB331D66414B
0064C4A22D00CBEE7BF4F0530A8838ABE02F9C2F2EC3C8043BD0A6F41C114575051EE804FA0F85C0F227932058BEDDC670896FD5B31EAA9268341EA4B49983D40679F7D37DC061F2B59189FD713BA4711EC97FCA76451C97739664E9296B98A31555A4554E666B768C65F1CF8A469A6C51FDD16B141D93A58C67B116E184F4E3B6FA38509E14B2851B7F1E4B4211594FDCF8EF1E5D8B4D111B6D5C3BDDD605680D0513618F698E05783975C450C372A48F10781D6A4D79D405649E9B472DDB272DF20581E409ADF9A6C033F56E9620871A70CDF544155AC41266125694A503A9D87C64479FCB1A231D4A25DD11C71E039DDB1BD5D08B6974ED9AD44050F7A3D14A403EF61FE5BA24B29DB5B6856076A408137A9B656EC5C98DE4EAD8AFC538636C5F7D00FD51C3DD7B565153C2BE00D0450985316FA625E1BA1B90796D75C8386C29BE12939DC8A99EB3D2FACCEE42ECDA2046FE45FFE8E30DF5A2B16238FCE9B02E5035F7EB020BB59FC7ABE5951044F0A76BCA33E0444B11E9B8A66F2BAE78446FDD59D3198E529820364534FE1F222FD58F3F074C1C8E33749873236D8D90F7E6495AFD4E73539FFA07BDD428FD8A7E45DB920D3D3D33AFB26FD46599474E3C82EDEF5517B217E443B1B3E41F9B24B50EBDB82E42B36C719DA40F46C8BAF14CDE569D7528DB998206F24A70F8B8A34C16BEEB0AF357203B01CB87253ED951624B0901566D1D3C2C9B8ACC0E10F17715BA2AD8C2EF2A77E32B408AF7A12DA0D1B838F2018AD5C2FF2E780742724D3FB44863B1F510DC3344D7AE20B995A03F541EAF073F1367CA6B924000628C46DE75C494AA299E3B3F917A57EDF0E83CF8D0E67024C3471E1D5EA7D03EF07D55AAD37E128B911DE3639DAA3827DC8E87EAC9CA0A99D65183749BBD206A055DA6384D14AAE0A6DF31DD4894797853D7531DEAEFCEFCB44DFD4951D2D3FD11A300BDEED8AA4C0DD4452C8F7B472861320371FB83797F2EFDFEC3BDDF350BAA3DA68C69548BB97FEEECBA98B8B66C43242384330A83F2C4C43E268263F50F672A713F8EF3E7E6FB41CDE1305592E7010FD83D93657B96663E9729A98457D4E9F80A3E8362F7729788751F60BE3F4C2EA118FF29221329288A580C33AA35013B49884D11FF8417E557BB34EDDEA353D5596E939CE9C7F749412FE81B2BD0C5D9AAFAAFBE6F087306650FC6F080CB0BAF507CDE3D896048F9E768EDB51B3CB907C2EA0C1CFF818D6039BE76F516EB46720D3E28E60004C0942FA93DEE07DDF87E081EB5FE441719CA19A947F34FA204B76D2329B717F50B9EDD926A93AB13048994E93BFB1A486E0E2FE740F37E0E10D1C3F8498C9F21BDB60D0A5E26CF0B0E1CD068D6122F659CE015AEBB34045EA3B08796C894CD1B9A7A73FC5E1072E5F651BB311F8A60799E60B51EDA1849C921C1421D28
70B36C74D767A3C01DF4417B89A967ABEFE07CBFF4D75422174703
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/KXKWVU+AvenirNext-Regular cguidfix
/F1.1/KXKWVU+AvenirNext-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1039 697 rc
0 697 m
1039 697 l
1039 0 l
0 0 l
h
f
0.60000002 i
0 697 m
1039 697 l
1039 0 l
0 0 l
h
f
Q
0.60000002 i
0.29411766 0.4627451 0.98431373 sc
q
198.83128 457.76593 m
207.0641 457.76593 l
207.0641 422.0274 l
198.83128 422.0274 l
198.83128 425.77002 l
195.45557 422.59 191.82492 421 187.93919 421 c
183.03349 421 178.97783 422.78568 175.77213 426.35712 c
172.59068 430.00192 171 434.55176 171 440.00674 c
171 445.36389 172.59068 449.82809 175.77213 453.39954 c
178.95355 456.97095 182.93634 458.75665 187.72063 458.75665 c
191.8492 458.75665 195.55272 457.04434 198.83128 453.61969 c
198.83128 457.76593 l
h
179.37852 440.00674 m
179.37852 436.58209 180.28923 433.79349 182.11066 431.64084 c
183.98065 429.46375 186.33633 428.37521 189.17776 428.37521 c
192.21349 428.37521 194.66631 429.42703 196.5363 431.53076 c
198.4063 433.70786 199.34128 436.47202 199.34128 439.82327 c
199.34128 443.17456 198.4063 445.93869 196.5363 448.11581 c
194.66631 450.24399 192.23776 451.30804 189.25063 451.30804 c
186.43347 451.30804 184.0778 450.23175 182.18352 448.0791 c
180.31352 445.90201 179.37852 443.21124 179.37852 440.00674 c
h
223.72929 485.54764 m
223.72929 422.0274 l
215.5329 422.0274 l
215.5329 480.82144 l
223.72929 485.54764 l
h
240.43089 495 m
240.43089 422.0274 l
232.23451 422.0274 l
232.23451 490.2738 l
240.43089 495 l
h
257.13251 457.76593 m
257.13251 422.0274 l
248.93613 422.0274 l
248.93613 457.76593 l
257.13251 457.76593 l
h
247.69756 472.62643 m
247.69756 474.06967 248.2197 475.3172 249.26398 476.36908 c
250.30827 477.42093 251.55896 477.94684 253.01611 477.94684 c
254.49753 477.94684 255.76038 477.42093 256.80466 476.36908 c
257.84894 475.34167 258.37109 474.08191 258.37109 472.58972 c
258.37109 471.09756 257.84894 469.82556 256.80466 468.77371 c
255.78465 467.72186 254.53397 467.19592 253.05254 467.19592 c
251.57111 467.19592 250.30827 467.72186 249.26398 468.77371 c
248.2197 469.82556 247.69756 471.1098 247.69756 472.62643 c
h
291.79333 457.76593 m
300.02612 457.76593 l
300.02612 422.0274 l
291.79333 422.0274 l
291.79333 425.77002 l
288.4176 422.59 284.78696 421 280.90125 421 c
275.99551 421 271.93988 422.78568 268.73416 426.35712 c
265.55273 430.00192 263.96204 434.55176 263.96204 440.00674 c
263.96204 445.36389 265.55273 449.82809 268.73416 453.39954 c
271.91559 456.97095 275.89838 458.75665 280.68268 458.75665 c
284.81125 458.75665 288.51474 457.04434 291.79333 453.61969 c
291.79333 457.76593 l
h
272.34058 440.00674 m
272.34058 436.58209 273.25125 433.79349 275.07269 431.64084 c
276.94269 429.46375 279.29837 428.37521 282.1398 428.37521 c
285.17551 428.37521 287.62833 429.42703 289.49832 431.53076 c
291.36835 433.70786 292.30331 436.47202 292.30331 439.82327 c
292.30331 443.17456 291.36835 445.93869 289.49832 448.11581 c
287.62833 450.24399 285.1998 451.30804 282.21265 451.30804 c
279.39551 451.30804 277.03983 450.23175 275.14554 448.0791 c
273.27554 445.90201 272.34058 443.21124 272.34058 440.00674 c
h
308.49493 457.76593 m
316.72775 457.76593 l
316.72775 454.46362 l
319.59348 457.32565 322.82343 458.75665 326.41769 458.75665 c
330.54626 458.75665 333.76407 457.44797 336.07123 454.83054 c
338.06265 452.60452 339.05835 448.97198 339.05835 443.93286 c
339.05835 422.0274 l
330.82553 422.0274 l
330.82553 441.98813 l
330.82553 445.51065 330.33984 447.94455 329.36841 449.28995 c
328.42126 450.65982 326.69699 451.34476 324.19556 451.34476 c
321.47556 451.34476 319.54489 450.43967 318.40344 448.62949 c
317.28632 446.84378 316.72775 443.72495 316.72775 439.27289 c
316.72775 422.0274 l
308.49493 422.0274 l
308.49493 457.76593 l
h
355.97855 450.06052 m
355.97855 422.0274 l
347.78214 422.0274 l
347.78214 450.06052 l
344.28503 450.06052 l
344.28503 457.76593 l
347.78214 457.76593 l
347.78214 470.86517 l
355.97855 470.86517 l
355.97855 457.76593 l
362.35352 457.76593 l
362.35352 450.06052 l
355.97855 450.06052 l
h
386.66864 451.67499 m
379.89297 448.04242 l
378.8244 450.24399 377.50085 451.34476 375.92227 451.34476 c
375.1694 451.34476 374.52585 451.09402 373.99158 450.59256 c
373.45728 450.09109 373.19016 449.44897 373.19016 448.6662 c
373.19016 447.29633 374.76871 445.93872 377.92584 444.59332 c
382.27298 442.70975 385.19937 440.97299 386.70508 439.38297 c
388.21078 437.79294 388.96362 435.65259 388.96362 432.96176 c
388.96362 429.51266 387.70081 426.62619 385.17508 424.30234 c
382.72223 422.10077 379.75943 421 376.28656 421 c
370.33655 421 366.12305 423.92316 363.6459 429.76953 c
370.64017 433.03516 l
371.61157 431.32285 372.35229 430.23428 372.8623 429.76953 c
373.858 428.83997 375.04797 428.37521 376.43228 428.37521 c
379.20084 428.37521 380.58511 429.64719 380.58511 432.19122 c
380.58511 433.65894 379.51654 435.02878 377.37939 436.30078 c
376.55368 436.71664 375.728 437.12027 374.90228 437.51166 c
374.07657 437.90305 373.23871 438.30664 372.38873 438.7225 c
370.00873 439.89667 368.33304 441.07083 367.3616 442.245 c
366.12305 443.73715 365.50375 445.65738 365.50375 448.00574 c
365.50375 451.11237 366.56018 453.68082 368.67303 455.71115 c
370.83444 457.74149 373.45728 458.75665 376.54156 458.75665 c
381.08298 458.75665 384.45865 456.39612 386.66864 451.67499 c
h
W*
0 0 1039 697 rc
166 500 m
393.96362 500 l
393.96362 416 l
166 416 l
h
f
Q
0.27058825 0.27058825 0.27058825 sc
q
0 0 1039 697 rc
1 0 0 -1 520 383 cm
/F1.1[ 28 0 0 -28 0 0]sf
0 32 m
(!"#$%&'\(&\)*+,%-./0&1/-+*/)[ 23.800000 7.756000 15.232000 14.000000 16.016000 7.000000 16.240000 6.440000 7.000000 19.880000 16.268000 7.000000 13.664000 16.016000 10.080000 12.432000 14.952000 7.056000 7.000000 24.808000 14.952000 10.080000 7.000000 16.268000 0.000000 ] xS
0 78 m
(2/-+.34-5&6-%%*)[ 15.792000 14.952000 10.080000 7.000000 12.432000 17.836000 16.268000 10.080000 13.664000 7.000000 21.812000 9.576000 16.016000 16.016000 0.000000 ] xS
0 124 m
(27489/:;87*)[ 15.792000 17.108000 16.268000 8.876000 16.324000 14.952000 24.724000 17.780000 8.876000 17.108000 0.000000 ] xS
0 170 m
(2!<=&>?@)[ 15.792000 23.800000 16.240000 16.240000 7.000000 16.240000 16.016000 0.000000 ] xS
1 0 0 -1 520 504 cm
0 33 m
(AAAB/00+/*8.B$7:)[ 20.888000 20.888000 19.880000 7.280000 14.952000 7.056000 7.056000 7.000000 14.952000 16.268000 8.876000 12.432000 7.280000 14.000000 17.108000 0.000000 ] xS
1 0 0 -1 520 456 cm
0 33 m
(%*C4+-+%.D/00+/*8.B$7:)[ 16.016000 16.268000 17.780000 16.268000 7.000000 10.080000 7.000000 16.016000 12.432000 22.400000 14.952000 7.056000 7.056000 7.000000 14.952000 16.268000 8.876000 12.432000 7.280000 14.000000 17.108000 0.000000 ] xS
2 J
0.7764706 0.7764706 0.7764706 sc
1 0 0 -1 453 513 cm
1 0.5 m
1 329.5 l
S
ep
end
