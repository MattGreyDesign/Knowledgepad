%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G1212) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1039 697
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1039 697
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: VSOSRN+AvenirNext-Medium
%!FontType1-1.0: VSOSRN+AvenirNext-Medium 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /VSOSRN+AvenirNext-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /T put
dup 34 /E put
dup 35 /C put
dup 36 /H put
dup 37 /N put
dup 38 /O put
dup 39 /L put
dup 40 /G put
dup 41 /Y put
dup 42 /space put
dup 43 /A put
dup 44 /D put
dup 45 /comma put
dup 46 /I put
dup 47 /period put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -440 1 index div -436 2 index div 1369 3 index div 1199 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000001A6670676D00000000000000B800000173676C7966000000000000022C00000AF4686561640000000000000D2000000036686865610000000000000D5800000024686D74780000000000000D7C000000446C6F63610000000000000DC0000000246D6178700000000000000DE400000020707265700000000000000E04000000720014004F00900060007C00000012FF10000001DA000D02C400120000B800002C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800092C4B535845441B2121592D00000400000000020002CE000300230027002B0049B8002C2FB8001C2FB8002C10B80026D0B800262FB900160003F4B8001C10B900250003F4B8002DDC00BB00030001002400042BBB00250001001900042BBB00040001000100042B3031373533152F0134373E01373E0335342623220607273E0133321615140607060706151711211101112111DE3835020D07161110140A042D1F1F2D0632074A3636461926250606BFFE6401CEFE00754343751138190D1D110F1713110924312C33084841473C20352321131434B80269FD97029CFD3202CE00010022FF7B00C500750003001FBB00030004000100042BB8000310B80005DC00BB00020002000000042B3031172337337250455E85FA000001003FFFFA00C5007D000B004EBB00000004000600042B41090006000000160000002600000036000000045D00B800004558B800032F1BB9000300053E59B900090002F441090007000900170009002700090037000900045D3031371406232226353436333216C5261D1C27261D1D263C1A28271A1B272600000000020005000002C202C40007000A004000B800004558B800022F1BB90002000B3E59B800004558B800002F1BB9000000053E59B800004558B800042F1BB9000400053E59BB00090001000600



00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/period 3 def
/A 4 def
/C 5 def
/D 6 def
/E 7 def
/G 8 def
/H 9 def
/I 10 def
/L 11 def
/N 12 def
/O 13 def
/T 14 def
/Y 15 def
/u0459 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-440 -436 1369 1199}def
/UniqueID 4365523 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B322782D282AC603D1F5A452D1E7AE90B2FF78B151C731C717F5B5A6214BA34BDAB4A274ADEC4EE87C9BE20CE972D500FD4462DBA182F7B904A95A5ECBB7FC4AA6C25F56E9C7D96F01AAF9958B92FCEBC338C6E8A183DA2C1EADC132EBBECE84D878498C65BAD4A7624321AAED8039945E1EFAE2D67967F28EF611CC9FAF4EA7E0BACFE5AA75E6EF177436776BA8698F5983F61A953D39A74489B221B6756C9534F48ED49FEB45F08001F415987495837A0810FE1072CD156223626CCBCE68BBBDC9DD2035122680E418B1C91A289474BA072EB1396FE3B70B2269EABBEFA00D3A84267BE9FD137B1036A5710F76D03914EDF40487D5759D08A4B987F60B60242B478333FC9C7F099B1047CCC48ECC3F08DDFCE01BD2515525A7594D5566E130BB21B6C3DC363B66B6FC2762B84B1E99EC7BCD88CE57C8CDA7130CD5BDE2B7DE8ED4C1F6C49174CF72AF6DB5CA1745439BAF2E02190FA7259C844FD098E2E9C54FA63833B39024CA25146F6B25D6B8CB3733EFA2CB73188311D3118BEE08A36DCEF82AB62193C9681B30AA18D6C575F60FA9C9DB66A999A662DB4951669D31A1A82CD469F6879CCF2F52A36987D8A323EE3787F6B02F726B99927571044DB098D9DA6FA4B71EA6B15FC8B023853CF2A924CD93D1F0992C6D106A319C0C063F719E239733F5C6D7B546562C207142775AA56A5943D2B566CF2D8FFCB745A4BDF1D2BDD6C09022B7AD6CE92BE5F63F6F3F068EBF1EA226A404AA8C6054A50E1F1D


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/VSOSRN+AvenirNext-Medium cguidfix
/F1.1/VSOSRN+AvenirNext-Medium renmfont
%RBIBeginFontSubset: JRDRMZ+AvenirNext-Regular
%!FontType1-1.0: JRDRMZ+AvenirNext-Regular 1.0000.2.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /JRDRMZ+AvenirNext-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /two put
dup 34 /four put
dup 35 /zero put
dup 36 /space put
dup 37 /R put
dup 38 /i put
dup 39 /c put
dup 40 /h put
dup 41 /m put
dup 42 /o put
dup 43 /n put
dup 44 /d put
dup 45 /S put
dup 46 /t put
dup 47 /W put
dup 48 /T put
dup 49 /r put
dup 50 /O put
dup 51 /N put
dup 52 /M put
dup 53 /five put
dup 54 /V put
dup 55 /I put
dup 56 /six put
dup 57 /C put
dup 58 /a put
dup 59 /w put
dup 60 /period put
dup 61 /l put
dup 62 /s put
dup 63 /e put
dup 64 /q put
dup 65 /u put
dup 66 /at put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -394 1 index div -411 2 index div 1309 3 index div 1192 5 -1 roll div]cvx def
/sfnts [<



005E0026005E0036005E0046005E0056005E0066005E0076005E0086005E0096005E00A6005E00B6005E00C6005E000D5D410500D5005E00E5005E00025DB8002610B80068DC00B800004558B800212F1BB90021000B3E59B800004558B800172F1BB9001700053E59BB004F0001002B00042BBB003E0002000000042BB8004F10B8000AD0BA002F00170021111239B8002B10B80034D0B8000010B80041D0BA004200170021111239B8002110B900590002F4410500D9005900E9005900025D411B0008005900180059002800590038005900480059005800590068005900780059008800590098005900A8005900B8005900C80059000D5DB8001710B900630002F4411B0007006300170063002700630037006300470063005700630067006300770063008700630097006300A7006300B7006300C70063000D5D410500D6006300E6006300025D303101220E0215141E0233323E0235342E02010E0123222E0235343E0233321E0215140E0223222635230E0323222E0235343E0233321617333733070E0315141E0233323E0235342E0223220E0215141E0233323637019C1E2D201007121F1822301E0E08132001273B9F60568D64373C688B4F4480633B203546272D2A040516202919223625141C334A2E26370B040A3E2802030402030B131019291D102B4D693F4570512C2E53734659823301E91F303C1D0E24201522333A1913251D12FE7C3C3B3762895150886439285078513C5C3E1F2C1D0B19160F192B3D242A513F2623192DBA071517160709110F091C30422641634422305473434772502B3732000000010038FFEE02B202D600270115BB001F0004000A00042B411B0006001F0016001F0026001F0036001F0046001F0056001F0066001F0076001F0086001F0096001F00A6001F00B6001F00C6001F000D5D410500D5001F00E5001F00025D00B800004558B8000F2F1BB9000F000B3E59B800004558B800052F1BB9000500053E59B8000F10B9001A0002F4410500D9001A00E9001A00025D411B0008001A0018001A0028001A0038001A0048001A0058001A0068001A0078001A0088001A0098001A00A8001A00B8001A00C8001A000D5DB8000510B900240002F4411B0007002400170024002700240037002400470024005700240067002400770024008700240097002400A7002400B7002400C70024000D5D410500D6002400E6002400025D3031250E0323222E0235343E0233321E0217072E0323220E0215141E023332363702B21233435130508862373863874F274B4236123C0B25323B22456D4C28294C6D443D6E25721B3024153863885151886338101D291A2C11221A103255703E3E7055323237000001005E000000A602C40003002FBB00000004000100042B00B800004558B800022F1BB90002000B3E59B800









00>] def
/CharStrings 36 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/zero 3 def
/two 4 def
/four 5 def
/five 6 def
/six 7 def
/at 8 def
/C 9 def
/I 10 def
/M 11 def
/N 12 def
/O 13 def
/R 14 def
/S 15 def
/T 16 def
/V 17 def
/W 18 def
/a 19 def
/c 20 def
/d 21 def
/e 22 def
/h 23 def
/i 24 def
/l 25 def
/m 26 def
/n 27 def
/o 28 def
/q 29 def
/r 30 def
/s 31 def
/t 32 def
/u 33 def
/w 34 def
/u0459 35 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-394 -411 1309 1192}def
/UniqueID 4088220 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93174D4E3C01712375EA6AD09BB8CBB6B1EDF2EE8AD6EA8A1100B27273DB2E6717CE9E0AF0D983B223584F83D00667A32874B0171975714E1B9533334C15E66942E391459DE389CBFF597AF5CD752761508253735767931B11580026E718344393F74D7180B8268A5DC35E726BB9011C70076D92CFF6B3F29108330D61ECEBB6BCA86E3D4FF6AAF3846F8725BEA8914D6DE727F8B2772EE1CFC3F43B34A5C4EF7BA2A9E5C3694138D2BFB2D107291054B3E3EC31E3B012A8149D593490917F1F9D721BC7B055E0B987E361637654B7F6E3A6BE38E0CC899530ECA63A850B213FC43361C1AE70C26EF6194EC2AE4D20FED71CFB0AA55662B9BD1A5996381A5A64A40B08D77C5A014C692AFC4CA2B1AC8A933B057B5362F649DCA17D887AA3EDB12C13C706712AE457F070555218DBEA6E72276F4B62E6CB86B1DD214C259EC607E1FF68416CFF15B00FF8BDFB73628A2E31F84663006BB0B19DAD3E7C2E52435AB99C0A3A2B21BC9C7C8F5ECB5C9B74697E28953167D3C329A35664EDC5AAE1F0174024A51AB3361AB76A072978AF7CE48DFEFE44652ED9B3A2B635F3B5367ACAD07F93591F7E10D972B7F35787DA848C9103B89088E992A434E4303DFA2824AA05D67E911109D3C022377F68547D49C95E5C305727B1590414914658BA4B5C2E13168527D1FF40D0564390920052A44AE9EB4163BC2A9A8B7A7194D0FDC04E37360999B3133A658E16F980E97A6093C7193E78C40ECFE433D073D295A092DFD2EB


8542976E5DA0E5DE8746756DF2A75B63DE836299495BCCCD80B0CE847E01086F8190BE44A6C4E2EB29D43A633658EFBDC6C5BAD30026F3DF3142879ABE21EA70410BAE6AE503659388F88E42C97483DC261D0EC8B4588B16467622EE13991533E179FFC19A6EA62E8B75B0140E2DEA04AA2541C8CCDFEA92332E5C44A10208D496295DB9AA4D371C55163DFD69093705C95280B4D61C86C3587B852E3D6ED159F718F7887DF14C73E62FA0C0FD9A8284DEED5444665E1D116F1D234BF05FAA483FBF45FD14A8D90E1F62B21BB2CEB3A3504E1177DF674E72D61CF341911AE3CA33B4B7BA4DED666FDED324DA930E86599C8110CCE5E0A4F121A0F15FD34EEB91BDA2C00B810743EE2AEDF25AC5B08D942351169D6C692420990CD9A56635870F463F271E3A1D07C0151A0B3312ACD25914DCA79E86B09811C8A6230108696886EBDD68E98024442B9BAE3A61D7868E024EC865522DE320C04FB9A4C47605700922493B71CDC39EB6DD471CCDA0D0988328217391A2CC9CCAB1326B6512DAAE0478544C6410F46E252FF00973C816F559C3F3E6895CE6AE7669C6E8F2541FF604C5A00C49EE6582998CBAEB365233C783D65C4B57A355F4DA2E82E9816142497E62AE6D64D3A83174185FFF7784191EF576BAA3BD3F29EF3B419257C93B290D37E5B54F92C319278DCF560EE39B87ABCA2800730FFE8A3F2BA15F8E83586D269DAF0A300C051A316BBAF5B2B5CFB5D34BF3A69021C2EC29D7B5E21400237F25AF1494751AC2B276E2D47089213CA79D7431B2FDC667D0BE516DA320DDB3B3D9860D742197248CB224212F2DF770D015C0C7AFA5DF5CCDB612DE9D8D6DD7051FD8BD4487F2146BCD278CA34AC769309C21BE91A54DA5EBDB4F1FA6FA5C371F00085B3ABD21E153EE7146C0216F8C38F1D133B6C52C6C85BCD26A2AC2E587A59E3B5BD7F466EC5F1720D6237FC9C3E5DFA86DB3F2E1537D3CFE2987C57370E761BBBBFDBAD85A418CED17A25CE5DFD62A57B0F9BDD5A88F4933544051088B8799B0D1551B373680E4540E5B8CE3652CE00AE846E6E2C71EA52A7372A35C715AC43EA6B993EAD1F197DF8A6FFAA1E7309127E75F3A4FF81D0E73E0C6A8EC3508E1B39A5A6FA253D98432DEB76B662DCBFFA165852D69ABCC63ACCD5E3070DE91B437223F3A699D8F5047E0A7BBF69EF1031F284C32683E5673CA1ACD4DCFCB71BF97AD4F68ECC4889E4C1026331A03ADD8B6E2F8491AF8D2534BD92D01B5FD2BAC200C94CA94595BAD597278AC1AFDE7759D76F0BC320E29A75859B6A94522A468C5DC6156DF905D8873B4E45BCA64427A979C03AEDCEFC12B836FD6A77459AFDE891006B4749B35503A62B414784B5992E1721678AA983440833035701ACAFC106AC301C53B664E5292CDA72C1CC2C1B7F9D7A04E37E93480166AFA08ACFFADB817

1D1D91166FFE4C721BEE81397B56C13F9ECE584C43659D98F6732E287BB41C8E77ED40168895AE8213A479C10E60E52BDAD7741A99DCC5521F89DE14597A2B25FE44685099D25F122F9B4DDA907D82C7A7AD71E75DE8F747880C8712FBAD8C6BAA78CC959A910E40C03E1EBFB2A06B67BA131CAA77563CD3AAA26A35E576C013E98291E3F413D590BC276020F9532B84BC5A9D61B2DB67FE28466115500879FEACC5AEDBF7C2C8E9914859C82602053D884B926059F43CC2C9B55126A7F6B8EB06D6869CB0CAC6B72B9CB43D0961387F10FCBBDFC500786795AE0A31A7DF231A0D775C5CFBC843703AB4950DE9B5C05E8B78CB123C01908071EADCB46AC1440F823EE95F67F799B39BA5544A566EE4DBD4D9789A6C00B06C18439ED211FC26897209BDB091875419268D3A2F7F92773C09DA3DE720FD93D206C540D932D6D3D0D3C27CB0A65D6001EB18030BF737FCA770DD62D5C6E60994912F741610547571D53983DCC4121C58C76B487D5C3C5A617CB1050DA90E1423D2A79154327F48C6C7DE481011BA34F2D046D5AB1400E535C65205BC4CA360ABC79A5D264E4619F220143017CEDFCFCCF1B104D638231512DA9A26C5A8EAD3FCB42B4AE9A41FC90B9D926777BA5386E8735D03A689C3CF2EB6EA47FBAB74A9AFA58E89A16418D42971909C02AFC9F1167C5A359369FB7B60B080BE33B627F5FEBB9ED6DE6FEBE7E20EEAB80035A93EB9C420C40B86B25C63FCB6EC8A2D051B7AEB28D72ACBB6FFF1C168BB4CD6A309ABF135F7AF3A56B7B32DE8D46D3D1217B8D5E394EB45B33E23DAF183001A939D0C4908BCBE8E5EFE46453BF4A89A43B563A7B7E4FF5890732311CE708824FD46130962D243C0D11E72C42782C0903E5233126A142CB66072FE22505A6EE903CA844E63868A194CB092A442C03A395B795A6A5E54DEFD8D22BF2822832987D613E3938A75DDE5F62EAC5302EBAE66B94214536251A6A024BFE52C2E4C6D5C0C128B17A9A03A4000C2068342FEE84F1CA9E460153F35D9C36F0E7973044CABE885417A1CBF75DD2F0970633FF8230C54D3EA1BA67DD3CF904208F466A3597111D9902CC545ADD7C36587CFD2DC851AD1F27816A98017DD98D74B6AF250FC3AC2C1B41F26C33E0425CF6E9ED891A628AFCB6C203016A7471BDC5F73DA071C9746C83F6E061108812DB8499421B8EDC03AE6D1F2CA962BCF102403172F602347AF704C91EBB3535D6FDD0C7ED3393AC057575582FAB5BA0C82D87F434C62EE122E4DE06A95350CCEA9E3CCC7EF6CABBAE4D4B17B16408C957B124DD18F7B406E2CE5CD2A00F4661D136D37F1CE444C69A32CF113A73BB69F154222CDBED310A15B4717B897F5C75EB7039D0D52887C6F545A998D12C5A2872A104FB06F4F2D7ED978F9D9B3F72829DD1D2DD31338AD7D54C87550555F46337FF2C0
3F1FB5C88C2032953DBBB1F437390CA5685382681D2C634CE10CC4D04BE03CAAF74DD4F2C43BB2D81AE6D266C2FB9A4ED729BAA9294E32B9C850F0BD97DD69FB2BA9EC5C9CC2ED7D50CA2DEB8224A1465BE86933F4DF5F29391958441A19CABA2359639CF4058BCC023EEC81B951C45097DFCCDF638752C27FB47F1333F190B26D0A9E2A5820CA3754A0BFC33D9379F280B75B82A5E4907E78DE9F4CA377E3248F1EF80F5DA0D3A709030E25A185671E3821B53F1FA716D2D2DEEC005BA94636BD75771094B7E63DC9B8D8AE2929EF3C51CE70BD9AE0BBC93A866554B1747060ECE8E0E597453ED65669B8182EAF739CA411BD08213EA90A2603C5BD8A4390EE74E90B5D7056340546E8E031E1FE4E132E9A9A34AF46879058E449606E91BE6D63C38D60893B3E35D8A5F16F7A9A73BBB4EECAD1AC1730D60021FB3380D7905339871D66D46DEAC82BE057D5724A20AB98DC04C2DCC9FA2613DF434FBEBD27B0F204D125475DB6768E5D5113A8975CAFAB0D36A9DC90585E1ABDAEB9ABC9BA1D9F1962D8D0350DC5D670C8A5D9ED0778F738167A087E486887BDFF2D97502077C546F76FFE28417948E196762E1FB2E0FCC59E177E152197114C0F4E0A94275A7E94581C5EA071CE4DA08988C458170CE3CB2670091981B23933C7C2475F86F7A7BB2AC9202FE50D27598F6BBB8E312F70D82E2B8E2284071E561F0BB0856E9DA35FE20DEA1B8246A9340EBBAD04984FB9ABA72582A11EF60BA8D1E31691E30F5DD1BAA365373D4498C0690BCAD5BA75FA44E5A06B7BD84A783D38B94943BF4A4AC652E047F307BB67745723909A38F86C31DC470097E4B0CBC16466AED66ABCBE8DF4274B95B9A568CD9E5061A206027695FA0B6A3855FED41F9A7A344095835D8BEA369174A15D2E111AEA1F64EDF3C406DC78A4E34F9DA62BF07F59857B414A7881E835890EEE930DE4332A53EEDA92697E03BAAD0651ADD26162C6427EA63618DCEE463A36E0B5A295081DDC1B3FC1302D6E8F76E1AA04DDD67459C1B44987BB29659610C4BCF48FE3287F68B89E5C75D921C8805E72066C744FCA5052A7A013EF03912BB78630D12322291EB6BFA6784C579F7E4188D29856F973A248C84D478BDDFB7DF924850D222B97B0819C39C5B65ED9FC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/JRDRMZ+AvenirNext-Regular cguidfix
/F2.1/JRDRMZ+AvenirNext-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1039 697 rc
0 697 m
1039 697 l
1039 0 l
0 0 l
h
f
0.60000002 i
0 697 m
1039 697 l
1039 0 l
0 0 l
h
f
Q
0.60000002 i
0.29411766 0.4627451 0.98431373 sc
q
198.83128 457.76593 m
207.0641 457.76593 l
207.0641 422.0274 l
198.83128 422.0274 l
198.83128 425.77002 l
195.45557 422.59 191.82492 421 187.93919 421 c
183.03349 421 178.97783 422.78568 175.77213 426.35712 c
172.59068 430.00192 171 434.55176 171 440.00674 c
171 445.36389 172.59068 449.82809 175.77213 453.39954 c
178.95355 456.97095 182.93634 458.75665 187.72063 458.75665 c
191.8492 458.75665 195.55272 457.04434 198.83128 453.61969 c
198.83128 457.76593 l
h
179.37852 440.00674 m
179.37852 436.58209 180.28923 433.79349 182.11066 431.64084 c
183.98065 429.46375 186.33633 428.37521 189.17776 428.37521 c
192.21349 428.37521 194.66631 429.42703 196.5363 431.53076 c
198.4063 433.70786 199.34128 436.47202 199.34128 439.82327 c
199.34128 443.17456 198.4063 445.93869 196.5363 448.11581 c
194.66631 450.24399 192.23776 451.30804 189.25063 451.30804 c
186.43347 451.30804 184.0778 450.23175 182.18352 448.0791 c
180.31352 445.90201 179.37852 443.21124 179.37852 440.00674 c
h
223.72929 485.54764 m
223.72929 422.0274 l
215.5329 422.0274 l
215.5329 480.82144 l
223.72929 485.54764 l
h
240.43089 495 m
240.43089 422.0274 l
232.23451 422.0274 l
232.23451 490.2738 l
240.43089 495 l
h
257.13251 457.76593 m
257.13251 422.0274 l
248.93613 422.0274 l
248.93613 457.76593 l
257.13251 457.76593 l
h
247.69756 472.62643 m
247.69756 474.06967 248.2197 475.3172 249.26398 476.36908 c
250.30827 477.42093 251.55896 477.94684 253.01611 477.94684 c
254.49753 477.94684 255.76038 477.42093 256.80466 476.36908 c
257.84894 475.34167 258.37109 474.08191 258.37109 472.58972 c
258.37109 471.09756 257.84894 469.82556 256.80466 468.77371 c
255.78465 467.72186 254.53397 467.19592 253.05254 467.19592 c
251.57111 467.19592 250.30827 467.72186 249.26398 468.77371 c
248.2197 469.82556 247.69756 471.1098 247.69756 472.62643 c
h
291.79333 457.76593 m
300.02612 457.76593 l
300.02612 422.0274 l
291.79333 422.0274 l
291.79333 425.77002 l
288.4176 422.59 284.78696 421 280.90125 421 c
275.99551 421 271.93988 422.78568 268.73416 426.35712 c
265.55273 430.00192 263.96204 434.55176 263.96204 440.00674 c
263.96204 445.36389 265.55273 449.82809 268.73416 453.39954 c
271.91559 456.97095 275.89838 458.75665 280.68268 458.75665 c
284.81125 458.75665 288.51474 457.04434 291.79333 453.61969 c
291.79333 457.76593 l
h
272.34058 440.00674 m
272.34058 436.58209 273.25125 433.79349 275.07269 431.64084 c
276.94269 429.46375 279.29837 428.37521 282.1398 428.37521 c
285.17551 428.37521 287.62833 429.42703 289.49832 431.53076 c
291.36835 433.70786 292.30331 436.47202 292.30331 439.82327 c
292.30331 443.17456 291.36835 445.93869 289.49832 448.11581 c
287.62833 450.24399 285.1998 451.30804 282.21265 451.30804 c
279.39551 451.30804 277.03983 450.23175 275.14554 448.0791 c
273.27554 445.90201 272.34058 443.21124 272.34058 440.00674 c
h
308.49493 457.76593 m
316.72775 457.76593 l
316.72775 454.46362 l
319.59348 457.32565 322.82343 458.75665 326.41769 458.75665 c
330.54626 458.75665 333.76407 457.44797 336.07123 454.83054 c
338.06265 452.60452 339.05835 448.97198 339.05835 443.93286 c
339.05835 422.0274 l
330.82553 422.0274 l
330.82553 441.98813 l
330.82553 445.51065 330.33984 447.94455 329.36841 449.28995 c
328.42126 450.65982 326.69699 451.34476 324.19556 451.34476 c
321.47556 451.34476 319.54489 450.43967 318.40344 448.62949 c
317.28632 446.84378 316.72775 443.72495 316.72775 439.27289 c
316.72775 422.0274 l
308.49493 422.0274 l
308.49493 457.76593 l
h
355.97855 450.06052 m
355.97855 422.0274 l
347.78214 422.0274 l
347.78214 450.06052 l
344.28503 450.06052 l
344.28503 457.76593 l
347.78214 457.76593 l
347.78214 470.86517 l
355.97855 470.86517 l
355.97855 457.76593 l
362.35352 457.76593 l
362.35352 450.06052 l
355.97855 450.06052 l
h
386.66864 451.67499 m
379.89297 448.04242 l
378.8244 450.24399 377.50085 451.34476 375.92227 451.34476 c
375.1694 451.34476 374.52585 451.09402 373.99158 450.59256 c
373.45728 450.09109 373.19016 449.44897 373.19016 448.6662 c
373.19016 447.29633 374.76871 445.93872 377.92584 444.59332 c
382.27298 442.70975 385.19937 440.97299 386.70508 439.38297 c
388.21078 437.79294 388.96362 435.65259 388.96362 432.96176 c
388.96362 429.51266 387.70081 426.62619 385.17508 424.30234 c
382.72223 422.10077 379.75943 421 376.28656 421 c
370.33655 421 366.12305 423.92316 363.6459 429.76953 c
370.64017 433.03516 l
371.61157 431.32285 372.35229 430.23428 372.8623 429.76953 c
373.858 428.83997 375.04797 428.37521 376.43228 428.37521 c
379.20084 428.37521 380.58511 429.64719 380.58511 432.19122 c
380.58511 433.65894 379.51654 435.02878 377.37939 436.30078 c
376.55368 436.71664 375.728 437.12027 374.90228 437.51166 c
374.07657 437.90305 373.23871 438.30664 372.38873 438.7225 c
370.00873 439.89667 368.33304 441.07083 367.3616 442.245 c
366.12305 443.73715 365.50375 445.65738 365.50375 448.00574 c
365.50375 451.11237 366.56018 453.68082 368.67303 455.71115 c
370.83444 457.74149 373.45728 458.75665 376.54156 458.75665 c
381.08298 458.75665 384.45865 456.39612 386.66864 451.67499 c
h
W*
0 0 1039 697 rc
166 500 m
393.96362 500 l
393.96362 416 l
166 416 l
h
f
Q
0.58823532 0.58823532 0.58823532 sc
q
0 0 1039 697 rc
1 0 0 -1 156 405 cm
/F1.1[ 25 0 0 -25 0 0]sf
17.4 26 m
(!"#$%&'&\(\)*)[ 18.225000 19.025000 21.700000 22.225000 23.300000 25.225000 16.025000 25.225000 22.250000 19.000000 0.000000 ] xS
16.137501 63 m
(#+%+,+-*.%#)[ 21.400000 21.775000 23.300000 21.775000 22.425000 21.775000 9.750000 10.250000 10.775000 23.300000 0.000000 ] xS
224.3625 63 m
(/)s
0.27058825 0.27058825 0.27058825 sc
1 0 0 -1 520 383 cm
/F2.1[ 28 0 0 -28 0 0]sf
0 32 m
(!"#$%&'\(\)*+,$-.$/)[ 16.240000 16.240000 16.240000 7.000000 16.772000 7.000000 14.000000 16.324000 24.724000 17.108000 16.268000 17.836000 7.000000 15.624000 8.876000 6.664000 0.000000 ] xS
0 78 m
(0*1*+.*)[ 13.272000 17.108000 9.576000 17.108000 16.268000 8.876000 0.000000 ] xS
0 124 m
(23$456$768$)[ 23.800000 21.392000 7.000000 24.808000 16.240000 16.940000 7.000000 7.280000 17.444000 16.240000 0.000000 ] xS
0 170 m
(9:+:,:)[ 19.656000 14.952000 16.268000 14.952000 17.836000 0.000000 ] xS
1 0 0 -1 520 504 cm
0 33 m
(;;;<:==&:+.><'*\))[ 20.888000 20.888000 19.880000 7.280000 14.952000 7.056000 7.056000 7.000000 14.952000 16.268000 8.876000 12.432000 7.280000 14.000000 17.108000 0.000000 ] xS
1 0 0 -1 520 456 cm
0 33 m
(?+@A&1&?>B:==&:+.><'*\))[ 16.016000 16.268000 17.780000 16.268000 7.000000 10.080000 7.000000 16.016000 12.432000 22.400000 14.952000 7.056000 7.056000 7.000000 14.952000 16.268000 8.876000 12.432000 7.280000 14.000000 17.108000 0.000000 ] xS
2 J
0.7764706 0.7764706 0.7764706 sc
1 0 0 -1 453 513 cm
1 0.5 m
1 329.5 l
S
ep
end
